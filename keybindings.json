// Place your key bindings in this file to override the defaults
[
  // disable tab suggestion insert
  {
    "key": "tab",
    "command": "-editor.action.inlineSuggest.commit",
    "when": "inlineEditIsVisible && tabShouldAcceptInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineEditIsVisible && inlineSuggestionVisible && tabShouldAcceptInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editor.hasSelection && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineEditIsVisible && inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editor.hasSelection && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible"
  },
  {
    "key": "tab",
    "command": "-editor.action.inlineSuggest.commit",
    "when": "inInlineEditsPreviewEditor"
  },
  {
    "key": "tab",
    "command": "-editor.emmet.action.expandAbbreviation",
    "when": "config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus"
  },
  {
    "key": "tab",
    "command": "-acceptSelectedSuggestion",
    "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "tab",
    "command": "-insertBestCompletion",
    "when": "atEndOfWord && textInputFocus && !hasOtherSuggestions && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
  },
  {
    "key": "tab",
    "command": "-insertNextSuggestion",
    "when": "hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
  },
  {
    "key": "tab",
    "command": "-insertSnippet",
    "when": "editorTextFocus && hasSnippetCompletions && !editorTabMovesFocus && !inSnippetMode"
  },
  // disable neovim keys
  {
    "key": "ctrl+k",
    "command": "-vscode-neovim.send",
    "when": "editorTextFocus && neovim.ctrlKeysNormal.k && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "key": "ctrl+k",
    "command": "-vscode-neovim.send",
    "when": "editorTextFocus && neovim.ctrlKeysInsert.k && neovim.init && neovim.mode == 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "key": "ctrl+c",
    "command": "-vscode-neovim.escape",
    "when": "editorTextFocus && neovim.ctrlKeysNormal.c && neovim.init && !dirtyDiffVisible && !findWidgetVisible && !inReferenceSearchEditor && !markersNavigationVisible && !notebookCellFocused && !notificationCenterVisible && !parameterHintsVisible && !referenceSearchVisible && neovim.mode == 'normal' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "key": "ctrl+c",
    "command": "-vscode-neovim.escape",
    "when": "editorTextFocus && neovim.ctrlKeysInsert.c && neovim.init && neovim.mode != 'normal' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "key": "ctrl+a",
    "command": "-vscode-neovim.send",
    "when": "editorTextFocus && neovim.ctrlKeysInsert.a && neovim.init && neovim.mode == 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "key": "ctrl+a",
    "command": "-vscode-neovim.send",
    "when": "editorTextFocus && neovim.ctrlKeysNormal.a && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "key": "ctrl+d",
    "command": "-vscode-neovim.send",
    "when": "editorTextFocus && neovim.ctrlKeysInsert.d && neovim.init && neovim.mode == 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  // neovim space
  {
    "key": "space r",
    "command": "editor.action.rename",
    "when": "editorTextFocus && neovim.init && neovim.mode == 'normal'"
  },
  {
    "key": "space t",
    "command": "workbench.action.showAllSymbols",
    "when": "editorTextFocus && neovim.init && neovim.mode == 'normal'"
  },
  {
    "key": "space ]",
    "command": "workbench.action.nextEditor",
    "when": "editorTextFocus && neovim.init && neovim.mode == 'normal'"
  },
  {
    "key": "space [",
    "command": "workbench.action.previousEditor",
    "when": "editorTextFocus && neovim.init && neovim.mode == 'normal'"
  },
  {
    "key": "space d",
    "command": "editor.action.revealDefinition",
    "when": "editorTextFocus && neovim.init && neovim.mode == 'normal'"
  },
  {
    "key": "space e",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "editorTextFocus && neovim.init && neovim.mode == 'normal'"
  },
  {
    "key": "space shift+r",
    "command": "workbench.action.openRecent",
    "when": "editorTextFocus && neovim.init && neovim.mode == 'normal'"
  },
  {
    "key": "space q",
    "command": "workbench.action.closeActiveEditor",
    "when": "editorTextFocus && neovim.init && neovim.mode == 'normal'"
  },
  {
    "key": "space shift+q",
    "command": "workbench.action.reopenClosedEditor",
    "when": "editorTextFocus && neovim.init && neovim.mode == 'normal'"
  },
  {
    "key": "space f",
    "command": "references-view.findReferences",
    "when": "editorTextFocus && neovim.init && neovim.mode == 'normal'"
  },
  {
    "key": "space s",
    "command": "workbench.action.files.save",
    "when": "editorTextFocus && neovim.init && neovim.mode == 'normal'"
  },
  {
    "key": "space n e",
    "command": "editor.action.marker.next",
    "when": "editorTextFocus && neovim.init && neovim.mode == 'normal'"
  },
  {
    "key": "space p e",
    "command": "editor.action.marker.prev",
    "when": "editorTextFocus && neovim.init && neovim.mode == 'normal'"
  },
  {
    "key": "space k k",
    "command": "workbench.action.openGlobalKeybindingsFile",
    "when": "editorTextFocus && neovim.init && neovim.mode == 'normal'"
  }
]
